{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\apmas\\\\Documents\\\\GitHub\\\\henri-mobile-interview-project\\\\navigation\\\\BottomTabNavigator.js\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport UsersScreen from \"../screens/UsersScreen\";\nvar BottomTab = createMaterialBottomTabNavigator();\nvar INITIAL_ROUTE_NAME = 'Home';\nexport default function BottomTabNavigator(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState('Home'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  navigation.setOptions({\n    headerTitle: getHeaderTitle(route)\n  });\n\n  var navigateTo = function navigateTo(screen) {\n    setValue(screen.toString());\n  };\n\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: INITIAL_ROUTE_NAME,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Feed',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(TabBarIcon, {\n          focused: !focused,\n          name: \"md-home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 48\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Users\",\n    component: UsersScreen,\n    options: {\n      title: 'Users',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(TabBarIcon, {\n          focused: !focused,\n          name: \"md-people\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 48\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Links\",\n    component: LinksScreen,\n    options: {\n      title: 'To-Do',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(TabBarIcon, {\n          focused: !focused,\n          name: \"md-book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 48\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }));\n}\n\nfunction getHeaderTitle(route) {\n  var _route$state$routes$r, _route$state, _route$state$routes$r2;\n\n  var routeName = (_route$state$routes$r = (_route$state = route.state) == null ? void 0 : (_route$state$routes$r2 = _route$state.routes[route.state.index]) == null ? void 0 : _route$state$routes$r2.name) != null ? _route$state$routes$r : INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n\n    case 'Links':\n      return 'Links to learn more';\n\n    case 'Users':\n      return 'View all Users';\n  }\n}","map":{"version":3,"sources":["C:/Users/apmas/Documents/GitHub/henri-mobile-interview-project/navigation/BottomTabNavigator.js"],"names":["createBottomTabNavigator","React","TabBarIcon","HomeScreen","LinksScreen","NavigationContainer","createMaterialBottomTabNavigator","UsersScreen","BottomTab","INITIAL_ROUTE_NAME","BottomTabNavigator","navigation","route","useState","value","setValue","setOptions","headerTitle","getHeaderTitle","navigateTo","screen","toString","title","tabBarIcon","focused","routeName","state","routes","index","name"],"mappings":"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","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport UsersScreen from \"../screens/UsersScreen\";\n\nconst BottomTab = createMaterialBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n\n    const [value, setValue] = React.useState('Home');\n\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n   const navigateTo = (screen) => {\n       setValue(screen.toString());\n   };\n\n  return (\n      <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n          <BottomTab.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              options={{\n                  title: 'Feed',\n                  tabBarIcon: ({ focused }) => <TabBarIcon focused={!focused} name=\"md-home\" />,\n              }}\n          />\n          <BottomTab.Screen\n              name=\"Users\"\n              component={UsersScreen}\n              options={{\n                  title: 'Users',\n                  tabBarIcon: ({ focused }) => <TabBarIcon focused={!focused} name=\"md-people\" />,\n              }}\n          />\n          <BottomTab.Screen\n              name=\"Links\"\n              component={LinksScreen}\n              options={{\n                  title: 'To-Do',\n                  tabBarIcon: ({ focused }) => <TabBarIcon focused={!focused} name=\"md-book\" />,\n              }}\n          />\n      </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n    case 'Links':\n      return 'Links to learn more';\n    case 'Users':\n      return 'View all Users';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}