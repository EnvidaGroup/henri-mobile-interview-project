{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\apmas\\\\Documents\\\\GitHub\\\\henri-mobile-interview-project\\\\screens\\\\UsersScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from \"../components/StyledText\";\nimport UserInsight from \"../components/UserInsight\";\nexport default function HomeScreen() {\n  React.useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/users').then(function (res) {\n                return res.json();\n              }).then(function (resJSON) {\n                return console.log(resJSON);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, React.createElement(UserInsight, {\n    userImage: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.welcomeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.getStartedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.getStartedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, \"Open up the code for this screen:\"), React.createElement(View, {\n    style: [styles.codeHighlightContainer, styles.homeScreenFilename],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, React.createElement(MonoText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"screens/HomeScreen.js\")), React.createElement(Text, {\n    style: styles.getStartedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }, \"Change any of the text, save the file, and your app will automatically reload.\")), React.createElement(View, {\n    style: styles.helpContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleHelpPress,\n    style: styles.helpLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.helpLinkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Help, it didn\\u2019t automatically reload!\")))));\n}\nHomeScreen.navigationOptions = {\n  header: null\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    var learnMoreButton = React.createElement(Text, {\n      onPress: handleLearnMorePress,\n      style: styles.helpLinkText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, \"Learn more\");\n    return React.createElement(Text, {\n      style: styles.developmentModeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, \"Development mode is enabled: your app will be slower but you can use useful development tools. \", learnMoreButton);\n  } else {\n    return React.createElement(Text, {\n      style: styles.developmentModeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, \"You are not in development mode: your app will run at full speed.\");\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change');\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n});","map":{"version":3,"sources":["C:/Users/apmas/Documents/GitHub/henri-mobile-interview-project/screens/UsersScreen.js"],"names":["WebBrowser","React","ScrollView","MonoText","UserInsight","HomeScreen","useEffect","fetchUsers","fetch","then","res","json","resJSON","console","log","styles","container","contentContainer","welcomeContainer","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","navigationOptions","header","DevelopmentModeNotice","__DEV__","learnMoreButton","handleLearnMorePress","developmentModeText","openBrowserAsync","StyleSheet","create","flex","backgroundColor","marginBottom","color","fontSize","lineHeight","textAlign","paddingTop","alignItems","marginTop","welcomeImage","width","height","resizeMode","marginLeft","marginHorizontal","marginVertical","codeHighlightText","borderRadius","paddingHorizontal","tabBarInfoContainer","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\r\nimport * as React from 'react';\r\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n// import { Container, Header, Left, Button, Icon, Body, Title, Right, Content, Footer, FooterTab } from 'native-base';\r\nimport { MonoText } from '../components/StyledText';\r\nimport UserInsight from \"../components/UserInsight\";\r\n\r\nexport default function HomeScreen() {\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst fetchUsers = async () => {\r\n\t\t\tawait fetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(resJSON => console.log(resJSON))\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n\t\t\t\t<UserInsight userImage={null}/>\r\n\t\t\t\t<View style={styles.welcomeContainer}>\r\n\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={styles.getStartedContainer}>\r\n\r\n\r\n\t\t\t\t\t<Text style={styles.getStartedText}>Open up the code for this screen:</Text>\r\n\r\n\t\t\t\t\t<View style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\r\n\t\t\t\t\t\t<MonoText>screens/HomeScreen.js</MonoText>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<Text style={styles.getStartedText}>\r\n\t\t\t\t\t\tChange any of the text, save the file, and your app will automatically reload.\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={styles.helpContainer}>\r\n\t\t\t\t\t<TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n\t\t\t\t\t\t<Text style={styles.helpLinkText}>Help, it didn’t automatically reload!</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</ScrollView>\r\n\r\n\r\n\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nHomeScreen.navigationOptions = {\r\n\theader: null,\r\n};\r\n\r\nfunction DevelopmentModeNotice() {\r\n\tif (__DEV__) {\r\n\t\tconst learnMoreButton = (\r\n\t\t\t<Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\r\n\t\t\t\tLearn more\r\n\t\t\t</Text>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Text style={styles.developmentModeText}>\r\n\t\t\t\tDevelopment mode is enabled: your app will be slower but you can use useful development\r\n\t\t\t\ttools. {learnMoreButton}\r\n\t\t\t</Text>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Text style={styles.developmentModeText}>\r\n\t\t\t\tYou are not in development mode: your app will run at full speed.\r\n\t\t\t</Text>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction handleLearnMorePress() {\r\n\tWebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\r\n}\r\n\r\nfunction handleHelpPress() {\r\n\tWebBrowser.openBrowserAsync(\r\n\t\t'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#fff',\r\n\t},\r\n\tdevelopmentModeText: {\r\n\t\tmarginBottom: 20,\r\n\t\tcolor: 'rgba(0,0,0,0.4)',\r\n\t\tfontSize: 14,\r\n\t\tlineHeight: 19,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tcontentContainer: {\r\n\t\tpaddingTop: 30,\r\n\t},\r\n\twelcomeContainer: {\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 10,\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\twelcomeImage: {\r\n\t\twidth: 100,\r\n\t\theight: 80,\r\n\t\tresizeMode: 'contain',\r\n\t\tmarginTop: 3,\r\n\t\tmarginLeft: -10,\r\n\t},\r\n\tgetStartedContainer: {\r\n\t\talignItems: 'center',\r\n\t\tmarginHorizontal: 50,\r\n\t},\r\n\thomeScreenFilename: {\r\n\t\tmarginVertical: 7,\r\n\t},\r\n\tcodeHighlightText: {\r\n\t\tcolor: 'rgba(96,100,109, 0.8)',\r\n\t},\r\n\tcodeHighlightContainer: {\r\n\t\tbackgroundColor: 'rgba(0,0,0,0.05)',\r\n\t\tborderRadius: 3,\r\n\t\tpaddingHorizontal: 4,\r\n\t},\r\n\tgetStartedText: {\r\n\t\tfontSize: 17,\r\n\t\tcolor: 'rgba(96,100,109, 1)',\r\n\t\tlineHeight: 24,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\ttabBarInfoContainer: {\r\n\t\tposition: 'absolute',\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\t...Platform.select({\r\n\t\t\tios: {\r\n\t\t\t\tshadowColor: 'black',\r\n\t\t\t\tshadowOffset: { width: 0, height: -3 },\r\n\t\t\t\tshadowOpacity: 0.1,\r\n\t\t\t\tshadowRadius: 3,\r\n\t\t\t},\r\n\t\t\tandroid: {\r\n\t\t\t\televation: 20,\r\n\t\t\t},\r\n\t\t}),\r\n\t\talignItems: 'center',\r\n\t\tbackgroundColor: '#fbfbfb',\r\n\t\tpaddingVertical: 20,\r\n\t},\r\n\ttabBarInfoText: {\r\n\t\tfontSize: 17,\r\n\t\tcolor: 'rgba(96,100,109, 1)',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tnavigationFilename: {\r\n\t\tmarginTop: 5,\r\n\t},\r\n\thelpContainer: {\r\n\t\tmarginTop: 15,\r\n\t\talignItems: 'center',\r\n\t},\r\n\thelpLink: {\r\n\t\tpaddingVertical: 15,\r\n\t},\r\n\thelpLinkText: {\r\n\t\tfontSize: 14,\r\n\t\tcolor: '#2e78b7',\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}